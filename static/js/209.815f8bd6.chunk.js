(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[209],{471:function(e,t,s){"use strict";s.r(t),s.d(t,"execute",(function(){return i}));var a=s(9),r=s(30),n=s(3);let o;function i(e,t){let s=t.responseType;s?"array-buffer"!==s&&"blob"!==s&&"json"!==s&&"native"!==s&&"native-request-init"!==s&&"text"!==s&&(s="text"):s="json",t.responseType=s;const i=Object(n.q)(t.signal);return delete t.signal,r.a.invokeStaticMessage("request",{url:e,options:t},{signal:i}).then(async r=>{let n,u,l,c,p;if(r.data)if(r.data instanceof ArrayBuffer){if(!("json"!==s&&"text"!==s&&"blob"!==s||(n=new Blob([r.data]),"json"!==s&&"text"!==s||(o||(o=new FileReaderSync),c=o.readAsText(n),"json"!==s)))){try{u=JSON.parse(c||null)}catch(b){const s={...b,url:e,requestOptions:t};throw new a.a("request:server",b.message,s)}if(u.error){const s={...u.error,url:e,requestOptions:t};throw new a.a("request:server",u.error.message,s)}}}else"native"===s&&(r.data.signal=i,l=await fetch(r.data.url,r.data));switch(s){case"blob":p=n;break;case"json":p=u;break;case"native":p=l;break;case"text":p=c;break;default:p=r.data}return{data:p,requestOptions:t,ssl:r.ssl,url:e}})}}}]);
//# sourceMappingURL=209.815f8bd6.chunk.js.map