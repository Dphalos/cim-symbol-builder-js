(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[236],{1038:function(e,a,t){"use strict";t.r(a),t.d(a,"default",(function(){return o}));var i=t(0),s=(t(11),t(4),t(8),t(5),t(119),t(2)),r=t(881),l=t(9),n=t(1);const c=e=>{let a=class extends e{initialize(){const{layer:e,view:a}=this;e.source.supportsSpatialReference(a.spatialReference)||this.addResolvingPromise(Promise.reject(new l.a("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map(e=>e.name)}};return Object(i.a)([Object(n.b)()],a.prototype,"layer",void 0),Object(i.a)([Object(n.b)({readOnly:!0})],a.prototype,"availableFields",null),a=Object(i.a)([Object(s.a)("esri.views.layers.OGCFeatureLayerView")],a),a};let p=class extends(c(r.default)){};p=Object(i.a)([Object(s.a)("esri.views.2d.layers.OGCFeatureLayerView2D")],p);const o=p}}]);
//# sourceMappingURL=236.e94576d8.chunk.js.map