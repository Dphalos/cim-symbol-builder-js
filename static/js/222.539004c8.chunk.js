(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[222],{478:function(e,t,s){"use strict";s.r(t),s.d(t,"default",(function(){return m}));s(60);var o=s(3),r=s(650),i=s(813),c=s(631),n=s(662),a=s(885),l=s(36);class m{convertVectorFieldData(e){const t=r.a.fromJSON(e.pixelBlock),s=Object(n.a)(t,e.type);return Promise.resolve(Object(o.j)(s)&&s.toJSON())}async decode(e){const t=await Object(i.a)(e.data,e.options);return t&&t.toJSON()}symbolize(e){e.pixelBlock=r.a.fromJSON(e.pixelBlock),e.extent=e.extent?l.a.fromJSON(e.extent):null;const t=this.symbolizer.symbolize(e);return Promise.resolve(Object(o.j)(t)&&t.toJSON())}async updateSymbolizer(e){var t;this.symbolizer=a.a.fromJSON(e.symbolizerJSON),e.histograms&&"rasterStretch"===(null==(t=this.symbolizer)?void 0:t.rendererJSON.type)&&(this.symbolizer.rendererJSON.histograms=e.histograms)}stretch(e){const t=this.symbolizer.simpleStretch(r.a.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve(Object(o.j)(t)&&t.toJSON())}estimateStatisticsHistograms(e){const t=Object(c.g)(r.a.fromJSON(e.srcPixelBlock));return Promise.resolve(t)}split(e){const t=Object(c.o)(r.a.fromJSON(e.srcPixelBlock),e.tileSize,e.maximumPyramidLevel);return t&&t.forEach((e,s)=>{t.set(s,null==e?void 0:e.toJSON())}),Promise.resolve(t)}async mosaicAndTransform(e){const t=e.srcPixelBlocks.map(e=>e?new r.a(e):null),s=Object(c.k)(t,e.srcMosaicSize,{blockWidths:e.blockWidths,alignmentInfo:e.alignmentInfo});if(!e.coefs)return s&&s.toJSON();const o=Object(c.a)(s,e.destDimension,e.coefs,e.sampleSpacing,e.interpolation);return o&&o.toJSON()}}}}]);
//# sourceMappingURL=222.539004c8.chunk.js.map