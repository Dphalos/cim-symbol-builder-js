(this["webpackJsonpmy-app"]=this["webpackJsonpmy-app"]||[]).push([[216],{807:function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return lt}));var i,n=r(0),a=r(180),s=r(3),o=r(342),l=r(13),c=r(1),u=(r(8),r(5),r(4)),p=r(2),d=r(15),m=r(214),b=r(60),h=r(72),y=r(781),f=r(45),O=r(9),j=r(23),g=r(6),v=r(11),R=r(14),w=r(27),S=r(17),x=r(95),I=r(870),N=r(10),_=r(21);const T=new Set(["raster","raster2","dem","fillraster"]),F=new Set(["rasters"]),C=e=>e&&e.rasterFunction?J.fromJSON(e):e,P=e=>e&&e instanceof J?e.toJSON():e,D=e=>(null==e?void 0:e.functionName)&&!e.declaredClass,M=e=>D(e)?new J(e):e;var A,V;(V=A||(A={}))[V.MOSAIC=0]="MOSAIC",V[V.GROUP=1]="GROUP",V[V.ITEM=2]="ITEM";let J=i=class extends N.a{constructor(e){super(e),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.description=null,this.functionDefinition=null,this.thumbnail=null}set functionArguments(e){if(e){const t=Object.keys(e);if(t.some(t=>T.has(t.toLowerCase())&&D(e[t]))||t.some(t=>F.has(t.toLowerCase())&&Array.isArray(e[t])&&e[t].some(e=>D(e)))){e=Object(g.a)(e);for(const r of t)T.has(r.toLowerCase())?e[r]=M(e[r]):F.has(r.toLowerCase())&&Array.isArray(e[r])&&(e[r]=e[r].map(e=>M(e)))}}this._set("functionArguments",e)}readFunctionArguments(e,t){return(e=>{if(null==e)return null;e=Object(g.a)(e);const t={};for(const r of Object.keys(e))T.has(r.toLowerCase())?t[r]=C(e[r]):F.has(r.toLowerCase())&&Array.isArray(e[r])?t[r]=e[r].map(C):t[r]=e[r];return t})(t.arguments||t.rasterFunctionArguments)}writeFunctionArguments(e,t,r){const i={};for(const n of Object.keys(e))T.has(n.toLowerCase())?i[n]=P(e[n]):F.has(n.toLowerCase())&&Array.isArray(e[n])?i[n]=e[n].map(P):i[n]=P(e[n]);this.functionDefinition?t.arguments=i:t[r]=i}readFunctionName(e,t){const r=t.rasterFunctionInfos;return t.name||(r&&r.length&&"None"!==r[0].name?r[0].name:t.rasterFunction)}writeFunctionName(e,t,r){this.functionDefinition?t.name=e:t[r]=e}readFunctionType(e){return A[e]}writeFunctionType(e,t,r){t[r]=A[e]}clone(){return new i({functionName:this.functionName,functionArguments:Object(g.a)(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,description:this.description,functionType:this.functionType,functionDefinition:this.functionDefinition,thumbnail:this.thumbnail})}};Object(n.a)([Object(c.b)({json:{type:Object,write:{target:"rasterFunctionArguments"}}})],J.prototype,"functionArguments",null),Object(n.a)([Object(S.a)("functionArguments",["rasterFunctionArguments","arguments"])],J.prototype,"readFunctionArguments",null),Object(n.a)([Object(d.a)("functionArguments")],J.prototype,"writeFunctionArguments",null),Object(n.a)([Object(c.b)({json:{type:String,write:{target:"rasterFunction"}}})],J.prototype,"functionName",void 0),Object(n.a)([Object(S.a)("functionName",["rasterFunction","rasterFunctionInfos","name"])],J.prototype,"readFunctionName",null),Object(n.a)([Object(d.a)("functionName")],J.prototype,"writeFunctionName",null),Object(n.a)([Object(_.a)({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1}),Object(c.b)({json:{default:"unknown"}})],J.prototype,"outputPixelType",void 0),Object(n.a)([Object(c.b)({type:String,json:{read:!0,write:!0}})],J.prototype,"variableName",void 0),Object(n.a)([Object(c.b)({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],J.prototype,"description",void 0),Object(n.a)([Object(c.b)({json:{origins:{"web-document":{read:!1,write:!1}}}})],J.prototype,"functionType",void 0),Object(n.a)([Object(S.a)("functionType")],J.prototype,"readFunctionType",null),Object(n.a)([Object(d.a)("functionType")],J.prototype,"writeFunctionType",null),Object(n.a)([Object(c.b)({type:Object,json:{read:{source:"function"},write:{target:"function"},origins:{"web-document":{read:!1,write:!1}}}})],J.prototype,"functionDefinition",void 0),Object(n.a)([Object(c.b)({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],J.prototype,"thumbnail",void 0),J=i=Object(n.a)([Object(p.a)("esri.layers.support.RasterFunction")],J);const z=J;var q=r(769),E=r(915),L=r(265);const Q={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},k={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},U=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function H(e){return U.has(e.type)}function B(e,t){if(!e||!t)return Object(g.a)(e||t);const r=Object(g.a)(e);return"none"!==t.functionName.toLowerCase()&&((function e(t){const r=t.Raster;return r&&"esri.layers.support.RasterFunction"===r.declaredClass?e(r.functionArguments):t}(r.functionArguments)).Raster=t),r}function G(e,t){switch(t=t||{},e.type){case"raster-stretch":return function(e,t){const r=new z;r.functionName="Stretch";const i=W[E.b.toJSON(e.stretchType)],n="u8",a={StretchType:i,Statistics:Y(e.statistics),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(a.Min=e.outputMin),null!=e.outputMax&&(a.Max=e.outputMax),i===W.standardDeviation?(a.NumberOfStandardDeviations=e.numberOfStandardDeviations,r.outputPixelType=n):i===W.percentClip?(a.MinPercent=e.minPercent,a.MaxPercent=e.maxPercent,r.outputPixelType=n):i===W.minMax?r.outputPixelType=n:i===W.sigmoid&&(a.SigmoidStrengthLevel=e.sigmoidStrengthLevel),r.functionArguments=a,r.variableName="Raster",e.colorRamp){const i=e.colorRamp,n=new z,a=Object(q.c)(i);return a?n.functionArguments={colorRamp:a}:!t.convertColorRampToColormap||"algorithmic"!==i.type&&"multipart"!==i.type?n.functionArguments={colorRamp:e.colorRamp.toJSON()}:n.functionArguments={Colormap:Object(q.b)(i,256)},n.variableName="Raster",n.functionName="Colormap",n.functionArguments.Raster=r,n}return r}(e,t);case"class-breaks":return function(e,t){const r=[],i=[],n=[],a=[],s=1e-6,{pixelType:o,rasterAttributeTable:l}=t,c=l&&l.features,u=K(l);if(c&&Array.isArray(c)&&e.classBreakInfos){e.classBreakInfos.forEach((t,r)=>{const i=t.symbol.color;let n;i.a&&c.forEach(s=>{n=s.attributes[e.field],(n>=t.minValue&&n<t.maxValue||r===e.classBreakInfos.length-1&&n>=t.minValue)&&a.push([s.attributes[u],i.r,i.g,i.b])})});const t=o?X(a,o):a,r=new z;return r.functionName="Colormap",r.functionArguments={},r.functionArguments.Colormap=t,r.variableName="Raster",r}e.classBreakInfos.forEach((e,t)=>{const o=e.symbol&&e.symbol.color;o.a?(0===t?r.push(e.minValue,e.maxValue+s):r.push(e.minValue+s,e.maxValue+s),i.push(t),a.push([t,o.r,o.g,o.b])):n.push(e.minValue,e.maxValue)});const p=o?X(a,o):a,d=new z;d.functionName="Remap",d.functionArguments={InputRanges:r,OutputValues:i,NoDataRanges:n},d.variableName="Raster";const m=new z;return m.functionName="Colormap",m.functionArguments={Colormap:p,Raster:d},m}(e,t);case"unique-value":return function(e,t){var r;const i=[],{pixelType:n,rasterAttributeTable:a}=t,s=a&&a.features,o=K(a),l=null==(r=e.defaultSymbol)?void 0:r.color;let c=!1;if(e.uniqueValueInfos&&(s?s.forEach(t=>{var r;const n=null==(r=e.uniqueValueInfos.find(r=>String(t.attributes[e.field])===String(r.value)))?void 0:r.symbol.color;n?i.push([t.attributes[o],n.r,n.g,n.b]):l&&i.push([t.attributes[o],l.r,l.g,l.b])}):e.uniqueValueInfos.forEach(e=>{var t;if(null==(t=e.symbol.color)||!t.a)return;const r=e.symbol.color;isNaN(+e.value)?c=!0:i.push([+e.value,r.r,r.g,r.b])})),c)return null;const u=n&&i.length>0?X(i,n):i,p=new z;return p.functionName="Colormap",p.functionArguments={},p.functionArguments.Colormap=u,p.variableName="Raster",p}(e,t);case"raster-colormap":return function(e,t){const r=e.extractColormap();if(!r||0===r.length)return;const{pixelType:i}=t,n=i?X(r,i):r,a=new z;return a.functionName="Colormap",a.functionArguments={},a.functionArguments.Colormap=n,a}(e,t);case"vector-field":return function(e,t){const r=new z;r.functionName="VectorFieldRenderer";const{dataType:i,bandProperties:n}=t,a="vector-uv"===i;let s,o;n&&2===n.length&&(s=n.map(e=>e.BandName.toLowerCase()).indexOf("magnitude"),o=n.map(e=>e.BandName.toLowerCase()).indexOf("direction")),-1!==s&&null!==s||(s=0,o=1);const l="arithmetic"===e.rotationType?1:2,c="flow-from"===e.flowRepresentation?0:1,u=e.visualVariables?e.visualVariables.filter(e=>"Magnitude"===e.field)[0]:new L.a,p={magnitudeBandID:s,directionBandID:o,isUVComponents:a,referenceSystem:l,massFlowAngleRepresentation:c,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:k[e.style.toLowerCase().replace("-","_")],minimumMagnitude:u.minDataValue,maximumMagnitude:u.maxDataValue,minimumSymbolSize:u.minSize,maximumSymbolSize:u.maxSize};return r.functionArguments=p,r}(e,t);case"raster-shaded-relief":return function(e,t){if("elevation"!==t.dataType)return new z;const r=new z;r.functionName="Hillshade";const i="traditional"===e.hillshadeType?0:1,n="none"===e.scalingType?1:3,a={HillshadeType:i,SlopeType:n,ZFactor:e.zFactor};return 0===i&&(a.Azimuth=e.azimuth,a.Altitude=e.altitude),3===n&&(a.PSPower=e.pixelSizePower,a.PSZFactor=e.pixelSizeFactor),r.functionArguments=a,r.variableName="Raster",e.colorRamp&&(r.functionName="ShadedRelief",a.Colormap=Object(q.b)(e.colorRamp,256)),r}(e,t)}}const W={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function X(e,t){const r=Q[String(t).toLowerCase()];return r&&e.push([Math.floor(r[0]-1),0,0,0],[Math.ceil(r[1]+1),0,0,0]),e}function K(e){if(!e)return;const{fields:t}=e,r=t&&t.find(e=>e&&e.name&&"value"===e.name.toLowerCase());return r&&r.name}function Y(e){const t=[];return e.forEach(e=>{const r=e;if(Array.isArray(r))t.push(r);else{if(null==r.min||null==r.max)return;const e=[r.min,r.max,r.avg||0,r.stddev||0];t.push(e)}}),t}var $,Z=r(31),ee=r(34);const te=Object(j.b)()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),re=Object(j.b)()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});let ie=$=class extends N.a{constructor(e){super(e),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(e,t){return null!=t.ascending?t.ascending:null==t.sortAscending||t.sortAscending}readMethod(e,t){return function(e){let t;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":t="esriMosaicAttribute";break;case"lockraster":t="esriMosaicLockRaster";break;case"center":t="esriMosaicCenter";break;case"northwest":t="esriMosaicNorthwest";break;case"nadir":t="esriMosaicNadir";break;case"viewpoint":t="esriMosaicViewpoint";break;case"seamline":t="esriMosaicSeamline";break;default:t="esriMosaicNone"}return re.fromJSON(t)}(t.mosaicMethod||t.defaultMosaicMethod)}readOperation(e,t){const r=t.mosaicOperation,i=t.mosaicOperator&&t.mosaicOperator.toLowerCase(),n=r||(i?te.toJSON(i):null);return te.fromJSON(n)||"first"}castSortValue(e){return null==e||"string"==typeof e||"number"==typeof e?e:""+e}clone(){return new $({ascending:this.ascending,itemRenderingRule:Object(g.a)(this.itemRenderingRule),lockRasterIds:Object(g.a)(this.lockRasterIds),method:this.method,multidimensionalDefinition:Object(g.a)(this.multidimensionalDefinition),objectIds:Object(g.a)(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:Object(g.a)(this.viewpoint),where:this.where})}};Object(n.a)([Object(c.b)({type:Boolean,json:{write:!0}})],ie.prototype,"ascending",void 0),Object(n.a)([Object(S.a)("ascending",["ascending","sortAscending"])],ie.prototype,"readAscending",null),Object(n.a)([Object(c.b)({type:z,json:{write:!0}})],ie.prototype,"itemRenderingRule",void 0),Object(n.a)([Object(c.b)({type:[u.a],json:{write:{overridePolicy(){return{enabled:"lock-raster"===this.method}}}}})],ie.prototype,"lockRasterIds",void 0),Object(n.a)([Object(c.b)({type:String,json:{type:re.jsonValues,write:{target:"mosaicMethod",writer:re.write}}})],ie.prototype,"method",void 0),Object(n.a)([Object(S.a)("method",["mosaicMethod","defaultMosaicMethod"])],ie.prototype,"readMethod",null),Object(n.a)([Object(c.b)({type:[I.a],json:{write:!0}})],ie.prototype,"multidimensionalDefinition",void 0),Object(n.a)([Object(c.b)({type:[u.a],json:{name:"fids",write:!0}})],ie.prototype,"objectIds",void 0),Object(n.a)([Object(c.b)({json:{type:te.jsonValues,read:{reader:te.read},write:{target:"mosaicOperation",writer:te.write}}})],ie.prototype,"operation",void 0),Object(n.a)([Object(S.a)("operation",["mosaicOperation","mosaicOperator"])],ie.prototype,"readOperation",null),Object(n.a)([Object(c.b)({type:String,json:{write:{overridePolicy(){return{enabled:"attribute"===this.method}}}}})],ie.prototype,"sortField",void 0),Object(n.a)([Object(c.b)({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:"attribute"===this.method,allowNull:!0}}}}})],ie.prototype,"sortValue",void 0),Object(n.a)([Object(Z.a)("sortValue")],ie.prototype,"castSortValue",null),Object(n.a)([Object(c.b)({type:ee.a,json:{write:!0}})],ie.prototype,"viewpoint",void 0),Object(n.a)([Object(c.b)({type:String,json:{write:!0}})],ie.prototype,"where",void 0),ie=$=Object(n.a)([Object(p.a)("esri.layers.support.MosaicRule")],ie);const ne=ie;var ae=r(785);let se=class extends N.a{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.bandIds=void 0,this.compression=void 0,this.compressionQuality=void 0,this.compressionTolerance=.01,this.format=null,this.interpolation=null,this.noData=null,this.noDataInterpretation=void 0,this.pixelType=void 0,this.lercVersion=2}writeAdjustAspectRatio(e,t,r){this.layer.version<10.3||(t[r]=e)}writeCompressionQuality(e,t,r){this.format&&this.format.toLowerCase().indexOf("jpg")>-1&&null!=e&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}writeLercVersion(e,t,r){"lerc"===this.format&&this.layer.version>=10.5&&(t[r]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("renderingRule"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("renderer"),e.commitProperty("definitionExpression"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const r=e.definitionExpression;return t?r&&r!==t.where&&(t=t.clone(),t.where=r):r&&(t=new ne({where:r})),t}get renderingRule(){const e=this.layer;let t=e.renderingRule;const r=e.pixelFilter,i=!e.format||e.format.indexOf("jpg")>-1||e.format.indexOf("png")>-1;return t=this._addResampleRasterFunction(t),i&&!r&&(t=this.combineRendererWithRenderingRule()),t}combineRendererWithRenderingRule(){var e;const t=this.layer,{rasterInfo:r,renderingRule:i,renderer:n}=t;return n&&H(n)?B(G(n,{rasterAttributeTable:r.attributeTable,pixelType:r.pixelType,dataType:r.dataType,bandProperties:null==(e=r.keyProperties)?void 0:e.BandProperties,convertColorRampToColormap:t.version<10.6}),i):i}_addResampleRasterFunction(e){var t;if("vector-field"!==(null==(t=this.layer.renderer)?void 0:t.type)||"Resample"===(null==e?void 0:e.functionName))return e;const r="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10;return B(new z({functionName:"Resample",functionArguments:{ResamplingType:r,InputCellSize:{x:this.layer.pixelSizeX,y:this.layer.pixelSizeY}}}),e)}};Object(n.a)([Object(c.b)()],se.prototype,"layer",void 0),Object(n.a)([Object(c.b)({json:{write:!0}})],se.prototype,"adjustAspectRatio",void 0),Object(n.a)([Object(d.a)("adjustAspectRatio")],se.prototype,"writeAdjustAspectRatio",null),Object(n.a)([Object(c.b)({json:{write:!0}}),Object(w.a)("layer.bandIds")],se.prototype,"bandIds",void 0),Object(n.a)([Object(c.b)({json:{write:!0}})],se.prototype,"compression",void 0),Object(n.a)([Object(c.b)({json:{write:!0}}),Object(w.a)("layer.compressionQuality")],se.prototype,"compressionQuality",void 0),Object(n.a)([Object(d.a)("compressionQuality")],se.prototype,"writeCompressionQuality",null),Object(n.a)([Object(c.b)({json:{write:!0}}),Object(w.a)("layer.compressionTolerance")],se.prototype,"compressionTolerance",void 0),Object(n.a)([Object(d.a)("compressionTolerance")],se.prototype,"writeCompressionTolerance",null),Object(n.a)([Object(c.b)({json:{write:!0}}),Object(w.a)("layer.format")],se.prototype,"format",void 0),Object(n.a)([Object(c.b)({type:String,json:{read:{reader:ae.a.read},write:{writer:ae.a.write}}}),Object(w.a)("layer.interpolation")],se.prototype,"interpolation",void 0),Object(n.a)([Object(c.b)({json:{write:!0}}),Object(w.a)("layer.noData")],se.prototype,"noData",void 0),Object(n.a)([Object(c.b)({type:String,json:{read:{reader:ae.b.read},write:{writer:ae.b.write}}}),Object(w.a)("layer.noDataInterpretation")],se.prototype,"noDataInterpretation",void 0),Object(n.a)([Object(c.b)({json:{write:!0}})],se.prototype,"pixelType",void 0),Object(n.a)([Object(c.b)({json:{write:!0}})],se.prototype,"lercVersion",void 0),Object(n.a)([Object(d.a)("lercVersion")],se.prototype,"writeLercVersion",null),Object(n.a)([Object(c.b)({type:Number})],se.prototype,"version",null),Object(n.a)([Object(c.b)({json:{write:!0}})],se.prototype,"mosaicRule",null),Object(n.a)([Object(c.b)({json:{write:!0}})],se.prototype,"renderingRule",null),se=Object(n.a)([Object(p.a)("esri.layers.mixins.ExportImageServiceParameters")],se);var oe=r(215),le=r(347),ce=r(650),ue=r(682),pe=r(916),de=r(813),me=r(662),be=r(917),he=r(885),ye=r(262),fe=r(69),Oe=r(105);let je=class extends N.a{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};Object(n.a)([Object(c.b)({json:{write:!0}})],je.prototype,"catalogItemVisibilities",void 0),Object(n.a)([Object(c.b)({type:Oe.default,json:{write:!0}})],je.prototype,"catalogItems",void 0),Object(n.a)([Object(c.b)({type:ee.a,json:{write:!0}})],je.prototype,"location",void 0),Object(n.a)([Object(c.b)({json:{write:!0}})],je.prototype,"name",void 0),Object(n.a)([Object(c.b)({json:{write:!0}})],je.prototype,"objectId",void 0),Object(n.a)([Object(c.b)({json:{write:!0}})],je.prototype,"processedValues",void 0),Object(n.a)([Object(c.b)({json:{write:!0}})],je.prototype,"properties",void 0),Object(n.a)([Object(c.b)({json:{write:!0}})],je.prototype,"value",void 0),je=Object(n.a)([Object(p.a)("esri.rest.support.ImageIdentifyResult")],je);const ge=je;let ve=class extends N.a{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};Object(n.a)([Object(c.b)({json:{write:!0}})],ve.prototype,"attributes",void 0),Object(n.a)([Object(c.b)({type:ee.a,json:{write:!0}})],ve.prototype,"location",void 0),Object(n.a)([Object(c.b)({json:{write:!0}})],ve.prototype,"locationId",void 0),Object(n.a)([Object(c.b)({json:{write:!0}})],ve.prototype,"rasterId",void 0),Object(n.a)([Object(c.b)({json:{write:!0}})],ve.prototype,"resolution",void 0),Object(n.a)([Object(c.b)({json:{write:!0}})],ve.prototype,"pixelValue",void 0),ve=Object(n.a)([Object(p.a)("esri.rest.support.ImageSample")],ve);const Re=ve;let we=class extends N.a{constructor(){super(...arguments),this.samples=null}};Object(n.a)([Object(c.b)({type:[Re],json:{write:!0}})],we.prototype,"samples",void 0),we=Object(n.a)([Object(p.a)("esri.rest.support.ImageSampleResult")],we);const Se=we;function xe(e){const t=null==e?void 0:e.time;if(t&&(null!=t.start||null!=t.end)){const r=[];null!=t.start&&r.push(t.start),null!=t.end&&-1===r.indexOf(t.end)&&r.push(t.end),e.time=r.join(",")}}async function Ie(e,t,r){const i=Object(fe.c)(e),n=t.geometry?[t.geometry]:[],a=await Object(ye.a)(n),o=t.toJSON();xe(o);const l=a&&a[0];Object(s.j)(l)&&(o.geometry=l.toJSON());const c=Object(fe.b)({...i.query,f:"json",...o});return Object(fe.a)(c,r)}async function Ne(e,t,r){const i=Object(fe.c)(e),n=t.geometry?[t.geometry]:[];return Object(ye.a)(n).then(e=>{const n=t.toJSON(),a=e&&e[0];Object(s.j)(a)&&(n.geometry=JSON.stringify(a.toJSON()));const o=Object(fe.b)({...i.query,f:"json",...n}),l=Object(fe.a)(o,r);return Object(f.default)(i.path+"/identify",l)}).then(e=>ge.fromJSON(e.data))}r(54),r(291),r(206);var _e,Te=r(397),Fe=r(36),Ce=(r(80),r(165)),Pe=r(91),De=(r(88),r(372),r(40),r(25),r(71)),Me=r(400),Ae=r(401),Ve=(r(313),r(135),r(114),r(81)),Je=r(16);let ze=_e=class extends N.a{constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.renderingRule=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null}writeGeometry(e,t,r){null!=e&&(t.geometryType=Object(Je.c)(e),t[r]=e.toJSON())}clone(){return new _e(Object(g.a)({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}};Object(n.a)([Object(c.b)({types:b.a,json:{read:Je.a}})],ze.prototype,"geometry",void 0),Object(n.a)([Object(d.a)("geometry")],ze.prototype,"writeGeometry",null),Object(n.a)([Object(c.b)({type:ne,json:{write:!0}})],ze.prototype,"mosaicRule",void 0),Object(n.a)([Object(c.b)({type:z,json:{write:!0}})],ze.prototype,"renderingRule",void 0),Object(n.a)([Object(c.b)({type:ee.a,json:{write:!0}})],ze.prototype,"pixelSize",void 0),Object(n.a)([Object(c.b)({json:{write:!0}})],ze.prototype,"raster",void 0),Object(n.a)([Object(c.b)({type:Ve.a,json:{read:{source:"time"},write:{target:"time"}}})],ze.prototype,"timeExtent",void 0),ze=_e=Object(n.a)([Object(p.a)("esri.rest.support.ImageHistogramParameters")],ze);const qe=ze;var Ee;let Le=Ee=class extends N.a{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0}writeGeometry(e,t,r){null!=e&&(t.geometryType=Object(Je.c)(e),t[r]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=ne.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=z.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}writeRenderingRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}writeRenderingRules(e,t,r){null!=e&&(t[r]=JSON.stringify(e.map(e=>e.toJSON())))}writePixelSize(e,t,r){null!=e&&(t[r]=JSON.stringify(e))}writeTimeExtent(e,t,r){if(null!=e){const i=Object(s.j)(e.start)?e.start.getTime():null,n=Object(s.j)(e.end)?e.end.getTime():null;t[r]=null!=i?null!=n?`${i},${n}`:""+i:null}}clone(){return new Ee(Object(g.a)({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};Object(n.a)([Object(c.b)({json:{write:!0}})],Le.prototype,"geometry",void 0),Object(n.a)([Object(d.a)("geometry")],Le.prototype,"writeGeometry",null),Object(n.a)([Object(c.b)({type:ne,json:{write:!0}})],Le.prototype,"mosaicRule",null),Object(n.a)([Object(d.a)("mosaicRule")],Le.prototype,"writeMosaicRule",null),Object(n.a)([Object(c.b)({type:z,json:{write:!0}})],Le.prototype,"renderingRule",null),Object(n.a)([Object(d.a)("renderingRule")],Le.prototype,"writeRenderingRule",null),Object(n.a)([Object(c.b)({type:[z],json:{write:!0}})],Le.prototype,"renderingRules",void 0),Object(n.a)([Object(d.a)("renderingRules")],Le.prototype,"writeRenderingRules",null),Object(n.a)([Object(c.b)({type:ee.a,json:{write:!0}})],Le.prototype,"pixelSize",void 0),Object(n.a)([Object(d.a)("pixelSize")],Le.prototype,"writePixelSize",null),Object(n.a)([Object(c.b)({type:Boolean,json:{write:!0}})],Le.prototype,"returnGeometry",void 0),Object(n.a)([Object(c.b)({type:Boolean,json:{write:!0}})],Le.prototype,"returnCatalogItems",void 0),Object(n.a)([Object(c.b)({type:Boolean,json:{write:!0}})],Le.prototype,"returnPixelValues",void 0),Object(n.a)([Object(c.b)({type:Number,json:{write:!0}})],Le.prototype,"maxItemCount",void 0),Object(n.a)([Object(c.b)({type:Ve.a,json:{write:{target:"time"}}})],Le.prototype,"timeExtent",void 0),Object(n.a)([Object(d.a)("timeExtent")],Le.prototype,"writeTimeExtent",null),Object(n.a)([Object(c.b)({json:{write:!0}})],Le.prototype,"raster",void 0),Object(n.a)([Object(c.b)({json:{write:!0}})],Le.prototype,"viewId",void 0),Le=Ee=Object(n.a)([Object(p.a)("esri.rest.support.ImageIdentifyParameters")],Le);const Qe=Le;var ke;let Ue=ke=class extends N.a{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(e,t,r){null!=e&&(t.geometryType=Object(Je.c)(e),t[r]=e.toJSON())}set locations(e){if(null!=e&&e.length){const t=new Ce.a({spatialReference:e[0].spatialReference});t.points=e.map(e=>[e.x,e.y]),this._set("locations",e),this.geometry=t}}clone(){return new ke(Object(g.a)({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};Object(n.a)([Object(c.b)({types:b.a,json:{read:Je.a}})],Ue.prototype,"geometry",void 0),Object(n.a)([Object(d.a)("geometry")],Ue.prototype,"writeGeometry",null),Object(n.a)([Object(c.b)({type:String,json:{type:ae.a.jsonValues,read:ae.a.read,write:ae.a.write}})],Ue.prototype,"interpolation",void 0),Object(n.a)([Object(c.b)({type:ne,json:{write:!0}})],Ue.prototype,"mosaicRule",void 0),Object(n.a)([Object(c.b)({type:[String],json:{write:!0}})],Ue.prototype,"outFields",void 0),Object(n.a)([Object(c.b)({type:ee.a,json:{write:!0}})],Ue.prototype,"pixelSize",void 0),Object(n.a)([Object(c.b)({type:String,json:{write:!0}})],Ue.prototype,"raster",void 0),Object(n.a)([Object(c.b)({type:Boolean,json:{write:!0}})],Ue.prototype,"returnFirstValueOnly",void 0),Object(n.a)([Object(c.b)({type:Number,json:{write:!0}})],Ue.prototype,"sampleDistance",void 0),Object(n.a)([Object(c.b)({type:Number,json:{write:!0}})],Ue.prototype,"sampleCount",void 0),Object(n.a)([Object(c.b)({type:Number,json:{write:!0}})],Ue.prototype,"sliceId",void 0),Object(n.a)([Object(c.b)({type:Ve.a,json:{read:{source:"time"},write:{target:"time"}}})],Ue.prototype,"timeExtent",void 0),Ue=ke=Object(n.a)([Object(p.a)("esri.rest.support.ImageSampleParameters")],Ue);const He=Ue;var Be=r(26);const Ge=v.a.getLogger("esri.layers.mixins.ArcGISImageService"),We=Object(j.b)()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),Xe=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Ke=Object(c.a)(u.i,{min:0,max:255});const Ye=e=>{let t=class extends e{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._symbolizer=null,this._defaultServiceMosaicRule=null,this._serviceSourceType=null,this._serviceSupportsMosaicRule=null,this.rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandCount=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelSizeX=null,this.pixelSizeY=null,this.pixelFilter=null,this.raster=void 0,this.viewId=void 0,this.renderer=null,this.rasterAttributeTable=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=null}initialize(){this._set("exportImageServiceParameters",new se({layer:this}))}readDefaultServiceMosaicRule(e,t){return this._serviceSupportsMosaicRule?ne.fromJSON(t):null}readServiceSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||Object(s.j)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.length<1||Object(s.j)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)}),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(e=>"number"==typeof e))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}get fieldsIndex(){return this.fields?new le.a(this.fields):null}set format(e){e&&Xe.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=ne.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const r=e||t.mosaicRule;return r?ne.fromJSON(r):this._isMosaicRuleSupported(t)?ne.fromJSON(t):null}writeMosaicRule(e,t,r){let i=this.mosaicRule;const n=this.definitionExpression;i?n&&n!==i.where&&(i=i.clone(),i.where=n):n&&(i=new ne({where:n})),this._isValidCustomizedMosaicRule(i)&&(t[r]=i.toJSON())}writeNoData(e,t,r){null!=e&&"number"==typeof e&&(t[r]=Ke(e))}readObjectIdField(e,t){if(!e){const r=t.fields.filter(e=>"esriFieldTypeOID"===e.type||"oid"===e.type);e=r&&r[0]&&r[0].name}return e}get parsedUrl(){return this.url?Object(R.K)(this.url):null}readRenderer(e,t,r){var i,n;const a=null==t||null==(i=t.layerDefinition)||null==(n=i.drawingInfo)?void 0:n.renderer,s=Object(y.b)(a,r);return null==s?null:("vector-field"===s.type&&t.symbolTileSize&&!a.symbolTileSize&&(s.symbolTileSize=t.symbolTileSize),H(s)||Ge.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),s)}writeRenderer(e,t,r){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this.rasterAttributeTableFieldPrefix||"Raster.",t=new oe.a({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new oe.a({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new oe.a({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let n=this.fields?Object(g.a)(this.fields):[];n.push(r),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&n.push(t),this.version>=10.4&&Object(s.j)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some(e=>"none"===e.name.toLowerCase())&&n.push(i),Object(s.j)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.filter(e=>"none"!==e.name.toLowerCase()).forEach(e=>{n.push(new oe.a({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))}),null==this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType||(n.push(new oe.a({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),n.push(new oe.a({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const a=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(a&&a.length>0){const t=a.filter(e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase()).map(t=>{const r=Object(g.a)(t);return r.name=e+t.name,r});n=n.concat(t)}return n}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=z.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}readRenderingRule(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&"None"!==r[0].name?z.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,r){this._isRFTJson(e)||(t[r]=e.toJSON())}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?Be.a.fromJSON(r):null}readPixelType(e){return We.fromJSON(e)||e}writePixelType(e,t,r){(Object(s.i)(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[r]=We.toJSON(e))}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let r=e;if(!this._isPicture()&&this.renderer&&this._symbolizer&&!this.pixelFilter){const i=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),n=this._rasterJobHandler.instance,{bandIds:a}=this;if(n){i&&(this._symbolizer.bind(),await n.updateSymbolizer(this._symbolizer,t),this._cachedRendererJson=this.renderer.toJSON());const s=await n.symbolize({bandIds:a,...e},t);r={extent:e.extent,pixelBlock:s}}else r={extent:e.extent,pixelBlock:this._symbolizer.symbolize({bandIds:a,...e})}}return r}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeHistograms(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeHistograms)throw new O.a("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=Object(u.d)(qe,e).clone();const{raster:r,mosaicRule:i,renderingRule:n}=this;return n&&null==e.renderingRule&&(e.renderingRule=n),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),async function(e,t,r){const i=await Ie(e,t,r),n=Object(fe.c)(e),{data:a}=await Object(f.default)(n.path+"/computeHistograms",i);return{histograms:a.histograms}}(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new O.a("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=Object(u.d)(qe,e).clone();const{raster:r,mosaicRule:i,renderingRule:n}=this;return n&&null==e.renderingRule&&(e.renderingRule=n),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),async function(e,t,r){const i=await Ie(e,t,r),n=Object(fe.c)(e),{data:a}=await Object(f.default)(n.path+"/computeStatisticsHistograms",i),{statistics:s}=a;return null!=s&&s.length&&s.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:s,histograms:a.histograms}}(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return Object(s.j)(t)?t.get(e):void 0}getFieldDomain(e,t){const r=this.getField(e);return r?r.domain:null}fetchImage(e,t,r,i={}){if(null==e||null==t||null==r)return Promise.reject(new O.a("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const n=this.renderer||this._symbolizer?this.generateRasterInfo(this.renderingRule,{signal:i.signal}):null;return Object(l.w)(n).then(n=>{n&&(this.rasterInfo=n);const a={imageServiceParameters:this.getExportImageServiceParameters(e,t,r,i.timeExtent),imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:i.requestAsImageElement&&!this.pixelFilter||!1,signal:i.signal};return this._requestArrayBuffer(a)})}fetchKeyProperties(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return Object(f.default)(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then(e=>e.data)}fetchRasterAttributeTable(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return this.version<10.1?Promise.reject(new O.a("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):Object(f.default)(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then(e=>Oe.default.fromJSON(e.data))}async getCatalogItemRasterInfo(e,t){const r=Object(f.default)(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t}).then(e=>e.data),i=Object(f.default)(this.parsedUrl.path+"/"+e+"/info/keyProperties",{query:this._getQueryParams(),...t}).then(e=>e.data).catch(()=>{}),n=await Promise.all([r,i]);if(!n[0])return;const a=Fe.a.fromJSON(n[0].extent),s=n[0].statistics?n[0].statistics.map(e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]})):null;return new ue.a({bandCount:n[0].bandCount,extent:a,spatialReference:a.sr,pixelSize:new ee.a({x:n[0].pixelSizeX,y:n[0].pixelSizeY,spatialReference:a.sr}),pixelType:n[0].pixelType.toLowerCase(),statistics:s,histograms:n[0].histograms,keyProperties:n[1]||{}})}async getCatalogItemICSInfo(e,t){const{data:r}=await Object(f.default)(this.parsedUrl.path+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),i=r&&r.ics;if(!i)return;let n=null;try{n=(await Object(f.default)(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!n||!n.spatialReference)return{ics:i,icsToPixelTransform:null,icsExtent:null,northDirection:null};const a=this.version>=10.7?Object(f.default)(this.parsedUrl.path+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then(e=>e.data).catch(()=>({})):{},s=n.spatialReference,o={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[n]}),inSR:s.wkid||JSON.stringify(s),outSR:"0:"+e},l=Object(f.default)(this.parsedUrl.path+"/project",{query:this._getQueryParams(o),...t}).then(e=>e.data).catch(()=>({})),c=(n.xmin+n.xmax)/2,u=(n.ymax-n.ymin)/6,p=n.ymin+u,d=[];for(let f=0;f<5;f++)d.push({x:c,y:p+u*f});const m={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:d}),inSR:s.wkid||JSON.stringify(s),outSR:"0:"+e},b=Object(f.default)(this.parsedUrl.path+"/project",{query:this._getQueryParams(m),...t}).then(e=>e.data).catch(()=>({})),h=await Promise.all([a,l,b]);let y=h[0].ipxf;if(null==y){var O,j,g;const e=null==(O=i.geodataXform)?void 0:O.xf_0;"topup"===(null==e||null==(j=e.name)?void 0:j.toLowerCase())&&6===(null==e||null==(g=e.coefficients)?void 0:g.length)&&(y={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const v=Fe.a.fromJSON(h[1]&&h[1].geometries&&h[1].geometries[0]);v&&(v.spatialReference=new Be.a({wkid:0,imageCoordinateSystem:i}));const R=h[2].geometries?h[2].geometries.filter(e=>null!=e&&null!=e.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y):[],w=R.length;if(w<3)return{ics:i,icsToPixelTransform:y,icsExtent:v,northDirection:null};let S=0,x=0,I=0,N=0;for(let f=0;f<w;f++)S+=R[f].x,x+=R[f].y,I+=R[f].x*R[f].x,N+=R[f].x*R[f].y;const _=(w*N-S*x)/(w*I-S*S);let T=0;const F=R[4].x>R[0].x,C=R[4].y>R[0].y;return _===1/0?T=C?90:270:0===_?T=F?0:180:_>0?T=F?180*Math.atan(_)/Math.PI:180*Math.atan(_)/Math.PI+180:_<0&&(T=C?180+180*Math.atan(_)/Math.PI:360+180*Math.atan(_)/Math.PI),{ics:i,icsToPixelTransform:y,icsExtent:v,northDirection:T}}async generateRasterInfo(e,t){if((!e||"none"===e.functionName.toLowerCase()||this._isVectorFieldResampleFunction(e))&&Object(s.j)(this.serviceRasterInfo))return this.serviceRasterInfo;const r=function(e){if(!e)return null;const t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi),r=null==t?void 0:t.map(e=>e.replace('"rasterFunction":"',"").replace('"',""));return r?r.join("/"):null}(e);if(this._functionRasterInfos[r])return this._functionRasterInfos[r];const i=this._generateRasterInfo(e,t);this._functionRasterInfos[r]=i;try{return await i}catch{return this._functionRasterInfos[r]=null,null}}getExportImageServiceParameters(e,t,r,i){const n=(e=e.clone().shiftCentralMeridian()).spatialReference;let a;if(n.imageCoordinateSystem){const{id:e,referenceServiceName:t}=n.imageCoordinateSystem;a=null!=e?t?this.parsedUrl.path.toLowerCase().indexOf("/"+t.toLowerCase()+"/")>-1?"0:"+e:JSON.stringify({icsid:e,icsns:t}):"0:"+e:JSON.stringify({ics:n.imageCoordinateSystem})}else a=n.wkid||JSON.stringify(n.toJSON());Object(s.j)(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const o=this.exportImageServiceParameters.toJSON(),{bandIds:l,noData:c}=o;let{renderingRule:u}=o;const p=this.renderingRule&&"none"!==this.renderingRule.functionName.toLowerCase(),d=!this.renderer||"raster-stretch"===this.renderer.type;if(null!=l&&l.length&&p&&d){const e={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:l}};if("Stretch"===u.rasterFunction)e.rasterFunctionArguments.Raster=u.rasterFunctionArguments.Raster,u.rasterFunctionArguments.Raster=e;else if("Colormap"===u.rasterFunction){const t=u.rasterFunctionArguments.Raster;"Stretch"===(null==t?void 0:t.rasterFunction)?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,u.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=u,u=e;o.bandIds=void 0}else o.bandIds=null==l?void 0:l.join(",");c instanceof Array&&c.length>0&&(o.noData=c.join(","));const m=this._serviceSupportsMosaicRule?this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,i):null;o.mosaicRule=m&&JSON.stringify(m),o.renderingRule=u&&JSON.stringify(u);const b={};if(i){const{start:e,end:t}=i.toJSON();e&&t&&e===t?b.time=""+e:null==e&&null==t||(b.time=`${null==e?"null":e},${null==t?"null":t}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:a,imageSR:a,size:t+","+r,...o,...b}}async getSamples(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsGetSamples)throw new O.a("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=Object(u.d)(He,e).clone();const{raster:r}=this;return r&&null==e.raster&&(e.raster=r),async function(e,t,r){var i,n;const a=t.toJSON();xe(a),null!=(i=a.outFields)&&i.length&&(a.outFields=a.outFields.join(","));const o=await Object(ye.a)(t.geometry),l=null==o?void 0:o[0];Object(s.j)(l)&&(a.geometry=l.toJSON());const c=Object(fe.c)(e),u=Object(fe.b)({...c.query,f:"json",...a}),p=Object(fe.a)(u,r),{data:d}=await Object(f.default)(c.path+"/getSamples",p),m=null==d||null==(n=d.samples)?void 0:n.map(e=>{const t="NaN"===e.value||""===e.value?null:e.value.split(" ").map(e=>Number(e));return{...e,pixelValue:t}});return Se.fromJSON({samples:m})}(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsIdentify)throw new O.a("imagery-layer:query-rasters","query operation is not supported on the input image service");e=Object(u.d)(Qe,e).clone();const{raster:r,mosaicRule:i,renderingRule:n}=this;if(n&&null==e.renderingRule&&(e.renderingRule=n),i&&null==e.mosaicRule){const t=this._combineMosaicRuleWithTimeExtent(i,e.timeExtent);e.mosaicRule=Object(s.q)(t)}return r&&null==e.raster&&(e.raster=r),Ne(this.url,e,this._getRequestOptions(t))}createQuery(){const e=new De.a;return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e}async queryRasters(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),Object(Ae.a)(this.url,e,t)}async queryObjectIds(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),Object(Me.a)(this.url,e,t)}async queryRasterCount(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),Object(Te.a)(this.url,e,t)}queryVisibleRasters(e,t){if(!e)return Promise.reject(new O.a("imagery-layer: query-visible-rasters","missing query parameter"));const{pixelSize:r,returnDomainValues:i,returnTopmostRaster:n,showNoDataRecords:a}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let o=!1,l=null,c=null;const u="raster.servicepixelvalue",p=this.rasterFunctionNamesIndex;if(Object(s.j)(e.outFields)&&(o=e.outFields.some(e=>-1===e.toLowerCase().indexOf(u)),this.version>=10.4)){const t=e.outFields.filter(e=>e.toLowerCase().indexOf(u)>-1&&e.length>u.length).map(e=>{const t=e.slice(u.length+1);return[this._updateRenderingRulesFunctionName(t,p),t]});l=t.map(e=>new z({functionName:e[0]})),c=t.map(e=>e[1]),0===l.length?this.renderingRule?(l.push(this.renderingRule),c.push(this.renderingRule.functionName)):l=null:this.renderingRule&&!l.some(e=>e.functionName===this.renderingRule.functionName)&&(l.push(this.renderingRule),c.push(this.renderingRule.functionName))}const d=Object(s.i)(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),m=e.timeExtent||this.timeExtent,b=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,m),h=this._getQueryParams({geometry:e.geometry,timeExtent:m,mosaicRule:b,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:l,pixelSize:r,returnCatalogItems:o,returnGeometry:d,raster:this.raster,maxItemCount:n?1:null});delete h.f;const y=new Qe(h),f=this.generateRasterInfo(this.renderingRule);return new Promise(r=>{f.then(()=>{Ne(this.url,y,{signal:null==t?void 0:t.signal,query:{...this.customParameters}}).then(t=>{const n=e.outFields;if(o&&!d&&t.catalogItems&&t.catalogItems.features&&t.catalogItems.features.length>0){const s=this.objectIdField||"ObjectId",o=t.catalogItems.features,l=o.map(e=>e.attributes&&e.attributes[s]),u=new De.a({objectIds:l,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[s]});return this.queryRasters(u).then(l=>{l&&l.features&&l.features.length>0&&l.features.forEach(t=>{o.forEach(r=>{r.attributes[s]===t.attributes[s]&&(r.geometry=new Pe.a(t.geometry),r.geometry.spatialReference=e.outSpatialReference)})}),r(this._processVisibleRastersResponse(t,{returnDomainValues:i,templateRRFunctionNames:c,showNoDataRecords:a,templateFields:n}))}).catch(()=>{throw new O.a("imagery-layer:query-visible-rasters","encountered error when querying visible rasters geometry")})}r(this._processVisibleRastersResponse(t,{returnDomainValues:i,templateRRFunctionNames:c,showNoDataRecords:a,templateFields:n}))}).catch(()=>{throw new O.a("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")})})})}async fetchVariableStatisticsHistograms(e,t){const r=Object(f.default)(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.statistics}),i=Object(f.default)(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),n=await Promise.all([r,i]);return n[0]&&n[0].forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:n[0]||null,histograms:n[1]||null}}async _fetchService(e){await this._fetchServiceInfo(e),Object(s.j)(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=Object(s.j)(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):this._fetchAuxiliaryRasterInfo({serviceInfo:t,signal:e}).then(e=>(this._set("serviceRasterInfo",e),e)),i=this.renderingRule&&"none"!==this.renderingRule.functionName.toLowerCase()?this.generateRasterInfo(this.renderingRule,{signal:e}):null,n=this._getRasterFunctionInfos();return Promise.all([r,i,n]).then(e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),e[2]&&this._set("rasterFunctionInfos",e[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this.renderer=null,Ge.warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._configDefaultRenderer(),this.watch("renderer",()=>this._configDefaultRenderer()),this.watch("renderingRule",e=>{(this.renderer||this._symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then(e=>{e&&(this.rasterInfo=e)})});const t=Object(s.j)(this.serviceRasterInfo)&&this.serviceRasterInfo.multidimensionalInfo;t&&this._updateMultidimensionalDefinition(t)})}_combineMosaicRuleWithTimeExtent(e,t){const r=this.timeInfo;if(Object(s.i)(e)||Object(s.i)(this.multidimensionalInfo)||Object(s.i)(t)||Object(s.i)(null==r?void 0:r.startField))return e;const{startField:i}=r;var n;if(e=e.clone(),"mosaic-dataset"===this._serviceSourceType)return e.multidimensionalDefinition=null==(n=e.multidimensionalDefinition)?void 0:n.filter(e=>e.dimensionName!==i),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const a=e.multidimensionalDefinition.filter(e=>e.dimensionName===i),o=Object(s.j)(t.start)?t.start.getTime():null,l=Object(s.j)(t.end)?t.end.getTime():null,c=null==o||null==l||o===l,u=c?[o||l]:[[o,l]],p=this.version>=10.8;if(a.length)a.forEach(e=>{e.dimensionName===i&&(p?(e.dimensionName=null,e.isSlice=null,e.values=null):(e.isSlice=c,e.values=u))});else if(!p){const t=e.multidimensionalDefinition.filter(e=>null!=e.variableName&&null==e.dimensionName);t.length?t.forEach(e=>{e.dimensionName=i,e.isSlice=c,e.values=u}):e.multidimensionalDefinition.push(new I.a({variableName:"",dimensionName:i,isSlice:c,values:u}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return Object(s.i)(e)?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(e=>!(!e.variableName&&!e.dimensionName)),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this._serviceSourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){var r;if(await this._fetchCapabilities(null==(r=t)?void 0:r.signal),!this.capabilities.operations.supportsQuery)throw new O.a("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=Object(s.j)(e)?Object(u.d)(De.a,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new pe.a;this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e},()=>null),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0}_isSupportedRenderer(e){const{rasterInfo:t,renderingRule:r}=this;return"unique-value"===e.type&&r&&"none"!==r.functionName.toLowerCase()&&1===t.bandCount&&["u8","s8"].includes(t.pixelType)||Object(be.d)(this.rasterInfo).includes(this.renderer.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var t;let r=this.sourceJSON;if(!r){const{data:t,ssl:i}=await Object(f.default)(this.parsedUrl.path,{query:this._getQueryParams(),signal:e});r=t,this.sourceJSON=r,i&&(this.url=this.url.replace(/^http:/i,"https:"))}if((null==(t=r.capabilities)?void 0:t.toLowerCase().split(",").map(e=>e.trim()).indexOf("tilesonly"))>-1)throw new O.a("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(r,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){var t;return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:(null==(t=e.fields)?void 0:t.length)>0}_isMosaicRuleSupported(e){var t;if(!e)return!1;const r=this._isMosaicDataset(e),i=e.currentVersion>=10.71&&e.hasMultidimensions&&e.timeInfo&&!(e.objectIdField&&(null==(t=e.fields)?void 0:t.length)>1);return r||i}_isVectorFieldResampleFunction(e){if(!Object(s.j)(e))return!1;const{functionName:t,functionArguments:r}=e,i="resample"===t.toLowerCase(),n=(null==r?void 0:r.ResampleType)||(null==r?void 0:r.resampleType);return i&&(7===n||10===n)}_isPicture(){return!this.format||this.format.indexOf("jpg")>-1||this.format.indexOf("png")>-1}_configDefaultRenderer(){if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&this.rasterInfo.bandCount>=3){const e=Object(be.b)(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}var e,t;this.renderer||(this.renderer=Object(be.a)(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null==(e=this.mosaicRule)||null==(t=e.multidimensionalDefinition)?void 0:t[0].variableName})),this._symbolizer?(this._symbolizer.rendererJSON=Object(be.e)(this.renderer.toJSON()),this._symbolizer.rasterInfo=this.rasterInfo):this._symbolizer=new he.a({rendererJSON:this.renderer.toJSON(),rasterInfo:this.rasterInfo}),this._symbolizer.bind()||(this._symbolizer=null)}}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:Object(s.j)(e.pixelBlock)&&e.pixelBlock.clone()}}_getQueryParams(e){const{raster:t,viewId:r}=this;return{raster:t,viewId:r,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...null==e?void 0:e.query,...this.customParameters}}}_decodePixelBlock(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):Object(de.a)(e,t,r)}async _fetchMultidimensionalInfo(e){var t;const r=await Object(f.default)(this.parsedUrl.path+"/multidimensionalInfo",{query:this._getQueryParams(),signal:e}).then(e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo});return null!=(t=r.variables)&&t.length&&r.variables.forEach(e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation})}),r}async _getRasterFunctionInfos(e){const t=this.sourceJSON.rasterFunctionInfos;return this.serviceRasterInfo?t:t&&this.version>=10.3?1===t.length&&"none"===t[0].name.toLowerCase()?t:Object(f.default)(this.parsedUrl.path+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e}).then(e=>{var t;return null==(t=e.data)?void 0:t.rasterFunctionInfos}):null}_fetchAuxiliaryRasterInfo(e){const t=e&&e.serviceInfo;if(!t)return Promise.reject(new O.a("imagery-layer:fetch-metadata","valid serviceInfo is required"));const r=e.renderingRule?JSON.stringify(e.renderingRule.toJSON()):null,i=e.signal,n=!!(t.hasRasterAttributeTable&&this.version>=10.1)&&Object(f.default)(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then(e=>Oe.default.fromJSON(e.data)).catch(()=>null),a=!!(t.hasColormap&&this.version>=10.1)&&Object(f.default)(this.parsedUrl.path+"/colormap",{query:this._getQueryParams({renderingRule:this.version>=10.6?r:null}),signal:i}).then(e=>{var t;return null==(t=e.data)?void 0:t.colormap}),s=!!(t.hasHistograms&&this.version>=10.1)&&Object(f.default)(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),o=this.version>=10.3&&Object(f.default)(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:r}),signal:i}).then(e=>e.data).catch(()=>{}),l=!!(t.hasMultidimensions&&this.version>=10.3)&&this._fetchMultidimensionalInfo();return Promise.all([n,a,s,o,l]).then(e=>{let r=null;if(t.minValues&&t.minValues.length===t.bandCount){r=[];for(let e=0;e<t.minValues.length;e++)r.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}const i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),n=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),a=Be.a.fromJSON(t.spatialReference||t.extent.spatialReference);return new ue.a({width:i,height:n,bandCount:t.bandCount,extent:Fe.a.fromJSON(t.extent),spatialReference:a,pixelSize:new ee.a({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a}),pixelType:t.pixelType.toLowerCase(),statistics:r,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})})}_requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:r,signal:i}=e;if(r&&!this.pixelFilter&&t.format&&t.format.indexOf("png")>-1)return Object(f.default)(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i}).then(e=>({imageElement:e.data,params:t}));const n=this._initJobHandler(),a=Object(f.default)(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i});return Promise.all([a,n]).then(e=>{const r=e[0].data,n=t.format||"jpgpng";let a=n;if("bsq"!==a&&"bip"!==a&&(a=Object(de.b)(r)),!a)throw new O.a("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(r)));const s="gif"===n||"bmp"===n||n.indexOf("png")>-1&&("png"===a||"jpg"===a),o={signal:i};return s?Object(de.a)(r,{useCanvas:!0,...t},o).then(e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t})):this._decodePixelBlock(r,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:n},o).then(e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t}))})}async _generateRasterInfo(e,t){const{data:r}=await Object(f.default)(this.parsedUrl.path,{query:this._getQueryParams({renderingRule:e}),...t});return await this._fetchAuxiliaryRasterInfo({serviceInfo:r,renderingRule:e,...t})}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule&&this._defaultServiceMosaicRule.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=e.variables[0].dimensions,r=[];for(const i in t)if(t.hasOwnProperty(i)){const e=t[i],n=e.extent;let a=!0,s=[n[0]];e.hasRanges&&!0===e.hasRanges?(a=!1,s=[e.values[0]]):"stdz"===e.name.toLowerCase()&&Math.abs(n[1])<=Math.abs(n[0])&&(s=[n[1]]),r.push(new I.a({variableName:"",dimensionName:t[i].name,isSlice:a,values:s}))}if(r.length>0){this.mosaicRule=this.mosaicRule||new ne;const e=this.mosaicRule.multidimensionalDefinition;(!e||e&&e.length<=0)&&(this.mosaicRule.multidimensionalDefinition=r)}}_formatAttributeValue(e,t){if("string"==typeof e){const r=this.popupTemplate&&this.popupTemplate.fieldInfos,i=this._getFieldInfo(r,t),n=i&&i.format;if(n){let t,r;return e.trim().indexOf(",")>-1?(t=",",r=t+" ",this._formatDelimitedString(e,t,r,n)):e.trim().indexOf(" ")>-1?(t=r=" ",this._formatDelimitedString(e,t,r,n)):this._formatNumberFromString(e,n)}}return e}_getFieldInfo(e,t){if(!e||!e.length||!t)return;const r=t.toLowerCase();let i;return e.some(e=>!(!e.fieldName||e.fieldName.toLowerCase()!==r&&e.fieldName.toLowerCase()!==r.replace(/ /g,"_"))&&(i=e,!0)),i}_formatDelimitedString(e,t,r,i){return e&&t&&r&&i?e.trim().split(t).map(e=>this._formatNumberFromString(e,i)).join(r):e}_formatNumberFromString(e,t){if(!e||!t)return e;const r=Number(e);return isNaN(r)?e:t.format(r)}_processVisibleRastersResponse(e,t){t=t||{};const r=e.value,{templateRRFunctionNames:i,showNoDataRecords:n,returnDomainValues:a,templateFields:o}=t,l=e.processedValues;let c=e.catalogItems&&e.catalogItems.features,u=e.properties&&e.properties.Values&&e.properties.Values.map(e=>e.replace(/ /gi,", "))||[];const p=this.objectIdField||"ObjectId",d="string"==typeof r&&r.toLowerCase().indexOf("nodata")>-1,m=[];if(r&&!c&&!d){const e={};e[p]=0,u=[r],c=[new h.a(this.fullExtent,null,e)]}if(!c)return[];let b,y,f;this._updateResponseFieldNames(c,o),d&&!n&&(c=[]);for(let h=0;h<c.length;h++){if(b=c[h],null!=r&&!d){if(y=u[h],f=this.renderingRule&&l&&l.length>0&&i&&i.length>0&&i.indexOf(this.renderingRule.functionName)>-1?l[i.indexOf(this.renderingRule.functionName)]:r,"nodata"===y.toLowerCase()&&!n)continue;const e="Raster.ItemPixelValue",t="Raster.ServicePixelValue";b.attributes[e]=this._formatAttributeValue(y,e),b.attributes[t]=this._formatAttributeValue(f,t),this._updateFeatureWithMagDirValues(b,y);const a=this.fields&&this.fields.length>0;let o=this.renderingRule&&Object(s.j)(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?a?y:r:f;this.renderingRule||(o=a?y:r),this._updateFeatureWithRasterAttributeTableValues(b,o)}if(b.sourceLayer=this,a&&this._updateFeatureWithDomainValues(b),i&&l&&i.length===l.length)for(let e=0;e<i.length;e++){const t="Raster.ServicePixelValue."+i[e];b.attributes[t]=this._formatAttributeValue(l[e],t)}m.push(c[h])}return m}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo&&this.rasterInfo.attributeTable||Object(s.j)(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,i=r&&r.features;if(!i)return;const n=r.fields,a=n.map(e=>e.name).filter(e=>"value"===e.toLowerCase()),o=a&&a[0];if(!o)return;const l=i.filter(e=>e.attributes[o]===(null!=t?parseInt(t,10):null));l&&l[0]&&n.forEach(t=>{const r=this.rasterAttributeTableFieldPrefix+t.name;e.attributes[r]=this._formatAttributeValue(l[0].attributes[t.name],r)})}_updateFeatureWithMagDirValues(e,t){if("esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType)return;const r=t.split(/,\s*/).map(e=>parseFloat(e)),i=r.map(e=>[e]),n=r.map(e=>({minValue:e,maxValue:e,noDataValue:null})),a=new ce.a({height:1,width:1,pixelType:"f32",pixels:i,statistics:n});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:a,extent:new Fe.a(0,0,0,0,this.spatialReference)});const s="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[a.pixels[0][0],a.pixels[1][0]]:Object(me.i)([a.pixels[0][0],a.pixels[1][0]]);e.attributes["Raster.Magnitude"]=s[0],e.attributes["Raster.Direction"]=s[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter(e=>e.domain&&"coded-value"===e.domain.type);null!=t&&t.forEach(t=>{const r=e.attributes[t.name];if(null!=r){const i=t.domain.codedValues.filter(e=>e.code===r)[0];i&&(e.attributes[t.name]=i.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;Object(s.j)(r)&&e.forEach(e=>{if(e&&e.attributes)for(const i of t)if(r.has(i)){const t=r.get(i).name;t!==i&&(e.attributes[i]=e.attributes[t],delete e.attributes[t])}})}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const r=e.toLowerCase().replace(/ /gi,"_");return t.has(r)?t.get(r):e}_isRFTJson(e){return e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map(e=>e.trim()):["image","catalog"],{currentVersion:r,advancedQueryCapabilities:i,maxRecordCount:n}=e,a=t.indexOf("image")>-1,s="esriImageServiceDataTypeElevation"===e.serviceDataType,o=!!(e.spatialReference||e.extent&&e.extent.spatialReference),l=t.includes("edit");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:a,supportsExportImage:a,supportsIdentify:a,supportsMeasure:t.indexOf("mensuration")>-1&&o,supportsDownload:t.indexOf("download")>-1,supportsQuery:t.indexOf("catalog")>-1&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&a,supportsProject:r>=10.3&&a,supportsComputeStatisticsHistograms:r>=10.4&&a,supportsQueryBoundary:r>=10.6&&a,supportsCalculateVolume:r>=10.7&&s,supportsComputePixelLocation:r>=10.7&&t.indexOf("catalog")>-1,supportsAdd:l,supportsDelete:l,supportsEditing:l,supportsUpdate:l,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1},query:{maxRecordCount:n,maxRecordCountFactor:void 0,supportsStatistics:!(null==i||!i.supportsStatistics),supportsOrderBy:!(null==i||!i.supportsOrderBy),supportsDistinct:!(null==i||!i.supportsDistinct),supportsPagination:!(null==i||!i.supportsPagination),supportsStandardizedQueriesOnly:!(null==i||!i.useStandardizedQueries),supportsPercentileStatistics:!(null==i||!i.supportsPercentileStatistics),supportsCentroid:!(null==i||!i.supportsReturningGeometryCentroid),supportsDistance:!(null==i||!i.supportsQueryWithDistance),supportsExtent:!(null==i||!i.supportsReturningQueryExtent),supportsGeometryProperties:!(null==i||!i.supportsReturningGeometryProperties),supportsHavingClause:!(null==i||!i.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}}};return Object(n.a)([Object(c.b)()],t.prototype,"_functionRasterInfos",void 0),Object(n.a)([Object(c.b)()],t.prototype,"_rasterJobHandler",void 0),Object(n.a)([Object(c.b)()],t.prototype,"_symbolizer",void 0),Object(n.a)([Object(c.b)({dependsOn:["_serviceSupportsMosaicRule"]})],t.prototype,"_defaultServiceMosaicRule",void 0),Object(n.a)([Object(S.a)("_defaultServiceMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultServiceMosaicRule",null),Object(n.a)([Object(c.b)()],t.prototype,"_cachedRendererJson",void 0),Object(n.a)([Object(c.b)({readOnly:!0})],t.prototype,"_serviceSourceType",void 0),Object(n.a)([Object(S.a)("_serviceSourceType",["serviceSourceType","fields"])],t.prototype,"readServiceSourceType",null),Object(n.a)([Object(c.b)({readOnly:!0})],t.prototype,"_serviceSupportsMosaicRule",void 0),Object(n.a)([Object(S.a)("_serviceSupportsMosaicRule",["currentVersion","fields"])],t.prototype,"readServiceSupportsMosaicRule",null),Object(n.a)([Object(c.b)()],t.prototype,"rasterAttributeTableFieldPrefix",void 0),Object(n.a)([Object(c.b)({readOnly:!0})],t.prototype,"rasterFunctionNamesIndex",null),Object(n.a)([Object(c.b)()],t.prototype,"adjustAspectRatio",void 0),Object(n.a)([Object(c.b)({readOnly:!0}),Object(w.a)("serviceRasterInfo.bandCount")],t.prototype,"bandCount",void 0),Object(n.a)([Object(c.b)({type:[u.a],json:{write:!0}})],t.prototype,"bandIds",void 0),Object(n.a)([Object(S.a)("bandIds")],t.prototype,"readBandIds",null),Object(n.a)([Object(c.b)({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),Object(n.a)([Object(S.a)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),Object(n.a)([Object(c.b)({type:Number})],t.prototype,"compressionQuality",void 0),Object(n.a)([Object(d.a)("compressionQuality")],t.prototype,"writeCompressionQuality",null),Object(n.a)([Object(c.b)({type:Number})],t.prototype,"compressionTolerance",void 0),Object(n.a)([Object(d.a)("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),Object(n.a)([Object(c.b)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),Object(n.a)([Object(c.b)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],t.prototype,"definitionExpression",void 0),Object(n.a)([Object(c.b)({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),Object(n.a)([Object(c.b)()],t.prototype,"rasterInfo",void 0),Object(n.a)([Object(c.b)({readOnly:!0,type:[oe.a]})],t.prototype,"fields",void 0),Object(n.a)([Object(c.b)({readOnly:!0})],t.prototype,"fieldsIndex",null),Object(n.a)([Object(c.b)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],t.prototype,"format",null),Object(n.a)([Object(S.a)("service","format",["serviceDataType"])],t.prototype,"readFormat",null),Object(n.a)([Object(c.b)({type:Fe.a})],t.prototype,"fullExtent",void 0),Object(n.a)([Object(c.b)({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),Object(n.a)([Object(c.b)({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),Object(n.a)([Object(c.b)({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),Object(n.a)([Object(c.b)({type:String,json:{type:ae.a.jsonValues,read:ae.a.read,write:ae.a.write}})],t.prototype,"interpolation",void 0),Object(n.a)([Object(c.b)()],t.prototype,"minScale",void 0),Object(n.a)([Object(S.a)("service","minScale")],t.prototype,"readMinScale",null),Object(n.a)([Object(c.b)()],t.prototype,"maxScale",void 0),Object(n.a)([Object(S.a)("service","maxScale")],t.prototype,"readMaxScale",null),Object(n.a)([Object(c.b)({type:ne})],t.prototype,"mosaicRule",null),Object(n.a)([Object(S.a)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),Object(n.a)([Object(d.a)("mosaicRule")],t.prototype,"writeMosaicRule",null),Object(n.a)([Object(c.b)({readOnly:!0}),Object(w.a)("serviceRasterInfo.multidimensionalInfo")],t.prototype,"multidimensionalInfo",void 0),Object(n.a)([Object(c.b)({json:{type:u.a}})],t.prototype,"noData",void 0),Object(n.a)([Object(d.a)("noData")],t.prototype,"writeNoData",null),Object(n.a)([Object(c.b)({type:String,json:{type:ae.b.jsonValues,read:ae.b.read,write:ae.b.write}})],t.prototype,"noDataInterpretation",void 0),Object(n.a)([Object(c.b)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),Object(n.a)([Object(S.a)("objectIdField")],t.prototype,"readObjectIdField",null),Object(n.a)([Object(c.b)({})],t.prototype,"geometryType",void 0),Object(n.a)([Object(c.b)({})],t.prototype,"typeIdField",void 0),Object(n.a)([Object(c.b)({})],t.prototype,"types",void 0),Object(n.a)([Object(c.b)({readOnly:!0})],t.prototype,"parsedUrl",null),Object(n.a)([Object(c.b)({readOnly:!0}),Object(w.a)("serviceRasterInfo.pixelSize.x")],t.prototype,"pixelSizeX",void 0),Object(n.a)([Object(c.b)({readOnly:!0}),Object(w.a)("serviceRasterInfo.pixelSize.y")],t.prototype,"pixelSizeY",void 0),Object(n.a)([Object(c.b)({type:Function})],t.prototype,"pixelFilter",void 0),Object(n.a)([Object(c.b)()],t.prototype,"raster",void 0),Object(n.a)([Object(c.b)()],t.prototype,"viewId",void 0),Object(n.a)([Object(c.b)({types:y.a,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:y.c,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],t.prototype,"renderer",void 0),Object(n.a)([Object(S.a)("renderer")],t.prototype,"readRenderer",null),Object(n.a)([Object(d.a)("renderer")],t.prototype,"writeRenderer",null),Object(n.a)([Object(c.b)(x.h)],t.prototype,"opacity",void 0),Object(n.a)([Object(c.b)({readOnly:!0}),Object(w.a)("serviceRasterInfo.attributeTable")],t.prototype,"rasterAttributeTable",void 0),Object(n.a)([Object(c.b)({readOnly:!0})],t.prototype,"rasterFields",null),Object(n.a)([Object(c.b)({constructOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),Object(n.a)([Object(c.b)({type:z})],t.prototype,"renderingRule",null),Object(n.a)([Object(S.a)("renderingRule",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRenderingRule",null),Object(n.a)([Object(d.a)("renderingRule")],t.prototype,"writeRenderingRule",null),Object(n.a)([Object(c.b)()],t.prototype,"serviceDataType",void 0),Object(n.a)([Object(c.b)({readOnly:!0,type:Be.a})],t.prototype,"spatialReference",void 0),Object(n.a)([Object(S.a)("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),Object(n.a)([Object(c.b)({json:{type:We.jsonValues}})],t.prototype,"pixelType",void 0),Object(n.a)([Object(S.a)("pixelType")],t.prototype,"readPixelType",null),Object(n.a)([Object(d.a)("pixelType")],t.prototype,"writePixelType",null),Object(n.a)([Object(c.b)({constructOnly:!0,type:ue.a})],t.prototype,"serviceRasterInfo",void 0),Object(n.a)([Object(c.b)()],t.prototype,"sourceJSON",void 0),Object(n.a)([Object(c.b)(x.n)],t.prototype,"url",void 0),Object(n.a)([Object(c.b)({readOnly:!0})],t.prototype,"version",void 0),Object(n.a)([Object(S.a)("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=Object(n.a)([Object(p.a)("esri.layers.mixins.ArcGISImageService")],t),t};var $e=r(356),Ze=r(348),et=r(364),tt=r(345),rt=r(344),it=r(353),nt=r(346),at=r(365),st=r(358);let ot=class extends(Object(Ze.a)(Object(at.a)(Object(it.a)(Object(nt.a)(Object(tt.a)(Object(rt.a)(Ye(Object(et.a)(Object($e.a)(Object(o.a)(m.a))))))))))){constructor(...e){super(...e),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=Object(s.j)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(l.t).then(()=>this._fetchService(t))),Promise.resolve(this)}writeOperationalLayerType(e,t,r){var i;const n="vector-field"===(null==(i=this.renderer)?void 0:i.type);t[r]=n?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(e){const t=this.rasterFields,r=this.title,i=new Set;let n=!1,a=!1;this.capabilities&&(n=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,a=n&&("esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType));const s=new Set;n&&(s.add("raster.itempixelvalue"),a&&s.add("raster.magnitude").add("raster.direction"));for(const o of t){const e=o.name.toLowerCase();s.has(e)||e.indexOf("raster.servicepixelvalue.")>-1||i.add(o.name)}return Object(st.a)({fields:t,title:r},{...e,visibleFieldNames:i})}queryFeatures(e,t){return this.queryRasters(e,t).then(e=>{if(null!=e&&e.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e})}queryFeatureCount(e,t){return this.queryRasterCount(e,t)}redraw(){this.emit("redraw")}};Object(n.a)([Object(c.b)(x.e)],ot.prototype,"legendEnabled",void 0),Object(n.a)([Object(c.b)({type:["show","hide"]})],ot.prototype,"listMode",void 0),Object(n.a)([Object(c.b)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],ot.prototype,"isReference",void 0),Object(n.a)([Object(c.b)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],ot.prototype,"operationalLayerType",void 0),Object(n.a)([Object(d.a)("web-map","operationalLayerType")],ot.prototype,"writeOperationalLayerType",null),Object(n.a)([Object(c.b)(x.j)],ot.prototype,"popupEnabled",void 0),Object(n.a)([Object(c.b)({type:a.a,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],ot.prototype,"popupTemplate",void 0),Object(n.a)([Object(c.b)({readOnly:!0})],ot.prototype,"defaultPopupTemplate",null),Object(n.a)([Object(c.b)({readOnly:!0,json:{read:!1}})],ot.prototype,"type",void 0),ot=Object(n.a)([Object(p.a)("esri.layers.ImageryLayer")],ot);const lt=ot}}]);
//# sourceMappingURL=216.40c69286.chunk.js.map